(function() {var type_impls = {
"bp_runtime":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BatchInvert%3C%5BT;+N%5D%3E-for-T\" class=\"impl\"><a href=\"#impl-BatchInvert%3C%5BT;+N%5D%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, T&gt; BatchInvert&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>&gt; for T<div class=\"where\">where\n    T: Invert&lt;Output = <a class=\"struct\" href=\"https://docs.rs/subtle/2.5.0/subtle/struct.CtOption.html\" title=\"struct subtle::CtOption\">CtOption</a>&lt;T&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://docs.rs/subtle/2.5.0/subtle/trait.ConditionallySelectable.html\" title=\"trait subtle::ConditionallySelectable\">ConditionallySelectable</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a></h4></section></summary><div class='docblock'>The output of batch inversion. A container of field elements.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.batch_invert\" class=\"method trait-impl\"><a href=\"#method.batch_invert\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">batch_invert</a>(field_elements: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/subtle/2.5.0/subtle/struct.CtOption.html\" title=\"struct subtle::CtOption\">CtOption</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>&gt;</h4></section></summary><div class='docblock'>Invert a batch of field elements.</div></details></div></details>","BatchInvert<[T; N]>","bp_runtime::ChainId"]],
"collectives_westend_integration_tests":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BatchInvert%3C%5BT;+N%5D%3E-for-T\" class=\"impl\"><a href=\"#impl-BatchInvert%3C%5BT;+N%5D%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, T&gt; BatchInvert&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>&gt; for T<div class=\"where\">where\n    T: Invert&lt;Output = <a class=\"struct\" href=\"https://docs.rs/subtle/2.5.0/subtle/struct.CtOption.html\" title=\"struct subtle::CtOption\">CtOption</a>&lt;T&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://docs.rs/subtle/2.5.0/subtle/trait.ConditionallySelectable.html\" title=\"trait subtle::ConditionallySelectable\">ConditionallySelectable</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a></h4></section></summary><div class='docblock'>The output of batch inversion. A container of field elements.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.batch_invert\" class=\"method trait-impl\"><a href=\"#method.batch_invert\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">batch_invert</a>(field_elements: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/subtle/2.5.0/subtle/struct.CtOption.html\" title=\"struct subtle::CtOption\">CtOption</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>&gt;</h4></section></summary><div class='docblock'>Invert a batch of field elements.</div></details></div></details>","BatchInvert<[T; N]>","collectives_westend_integration_tests::XcmHash"],["<section id=\"impl-LenExceeds%3CA,+%5B();+15%5D%3E-for-B\" class=\"impl\"><a href=\"#impl-LenExceeds%3CA,+%5B();+15%5D%3E-for-B\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, O&gt; LenExceeds&lt;A, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">15</a>]&gt; for B<div class=\"where\">where\n    A: Onion&lt;Type = O&gt;,\n    B: Onion&lt;Type = ((((((((((((((<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(O,)</a>,),),),),),),),),),),),),),)&gt;,</div></h3></section>","LenExceeds<A, [(); 15]>","collectives_westend_integration_tests::XcmHash"],["<section id=\"impl-LenExceeds%3CA,+%5B();+30%5D%3E-for-B\" class=\"impl\"><a href=\"#impl-LenExceeds%3CA,+%5B();+30%5D%3E-for-B\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, O&gt; LenExceeds&lt;A, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">30</a>]&gt; for B<div class=\"where\">where\n    A: Onion&lt;Type = O&gt;,\n    B: Onion&lt;Type = (((((((((((((((((((((((((((((<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(O,)</a>,),),),),),),),),),),),),),),),),),),),),),),),),),),),),)&gt;,</div></h3></section>","LenExceeds<A, [(); 30]>","collectives_westend_integration_tests::XcmHash"],["<section id=\"impl-LenExceeds%3CA,+%5B();+24%5D%3E-for-B\" class=\"impl\"><a href=\"#impl-LenExceeds%3CA,+%5B();+24%5D%3E-for-B\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, O&gt; LenExceeds&lt;A, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">24</a>]&gt; for B<div class=\"where\">where\n    A: Onion&lt;Type = O&gt;,\n    B: Onion&lt;Type = (((((((((((((((((((((((<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(O,)</a>,),),),),),),),),),),),),),),),),),),),),),),)&gt;,</div></h3></section>","LenExceeds<A, [(); 24]>","collectives_westend_integration_tests::XcmHash"],["<section id=\"impl-LenExceeds%3CA,+%5B();+20%5D%3E-for-B\" class=\"impl\"><a href=\"#impl-LenExceeds%3CA,+%5B();+20%5D%3E-for-B\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, O&gt; LenExceeds&lt;A, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">20</a>]&gt; for B<div class=\"where\">where\n    A: Onion&lt;Type = O&gt;,\n    B: Onion&lt;Type = (((((((((((((((((((<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(O,)</a>,),),),),),),),),),),),),),),),),),),)&gt;,</div></h3></section>","LenExceeds<A, [(); 20]>","collectives_westend_integration_tests::XcmHash"],["<section id=\"impl-LenExceeds%3CA,+%5B();+28%5D%3E-for-B\" class=\"impl\"><a href=\"#impl-LenExceeds%3CA,+%5B();+28%5D%3E-for-B\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, O&gt; LenExceeds&lt;A, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">28</a>]&gt; for B<div class=\"where\">where\n    A: Onion&lt;Type = O&gt;,\n    B: Onion&lt;Type = (((((((((((((((((((((((((((<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(O,)</a>,),),),),),),),),),),),),),),),),),),),),),),),),),),)&gt;,</div></h3></section>","LenExceeds<A, [(); 28]>","collectives_westend_integration_tests::XcmHash"],["<section id=\"impl-LenExceeds%3CA,+%5B();+10%5D%3E-for-B\" class=\"impl\"><a href=\"#impl-LenExceeds%3CA,+%5B();+10%5D%3E-for-B\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, O&gt; LenExceeds&lt;A, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">10</a>]&gt; for B<div class=\"where\">where\n    A: Onion&lt;Type = O&gt;,\n    B: Onion&lt;Type = (((((((((<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(O,)</a>,),),),),),),),),)&gt;,</div></h3></section>","LenExceeds<A, [(); 10]>","collectives_westend_integration_tests::XcmHash"],["<section id=\"impl-LenExceeds%3CA,+%5B();+18%5D%3E-for-B\" class=\"impl\"><a href=\"#impl-LenExceeds%3CA,+%5B();+18%5D%3E-for-B\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, O&gt; LenExceeds&lt;A, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">18</a>]&gt; for B<div class=\"where\">where\n    A: Onion&lt;Type = O&gt;,\n    B: Onion&lt;Type = (((((((((((((((((<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(O,)</a>,),),),),),),),),),),),),),),),),)&gt;,</div></h3></section>","LenExceeds<A, [(); 18]>","collectives_westend_integration_tests::XcmHash"],["<section id=\"impl-LenExceeds%3CA,+%5B();+12%5D%3E-for-B\" class=\"impl\"><a href=\"#impl-LenExceeds%3CA,+%5B();+12%5D%3E-for-B\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, O&gt; LenExceeds&lt;A, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">12</a>]&gt; for B<div class=\"where\">where\n    A: Onion&lt;Type = O&gt;,\n    B: Onion&lt;Type = (((((((((((<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(O,)</a>,),),),),),),),),),),)&gt;,</div></h3></section>","LenExceeds<A, [(); 12]>","collectives_westend_integration_tests::XcmHash"],["<section id=\"impl-LenExceeds%3CA,+%5B();+7%5D%3E-for-B\" class=\"impl\"><a href=\"#impl-LenExceeds%3CA,+%5B();+7%5D%3E-for-B\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, O&gt; LenExceeds&lt;A, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">7</a>]&gt; for B<div class=\"where\">where\n    A: Onion&lt;Type = O&gt;,\n    B: Onion&lt;Type = ((((((<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(O,)</a>,),),),),),)&gt;,</div></h3></section>","LenExceeds<A, [(); 7]>","collectives_westend_integration_tests::XcmHash"],["<section id=\"impl-LenExceeds%3CA,+%5B();+14%5D%3E-for-B\" class=\"impl\"><a href=\"#impl-LenExceeds%3CA,+%5B();+14%5D%3E-for-B\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, O&gt; LenExceeds&lt;A, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">14</a>]&gt; for B<div class=\"where\">where\n    A: Onion&lt;Type = O&gt;,\n    B: Onion&lt;Type = (((((((((((((<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(O,)</a>,),),),),),),),),),),),),)&gt;,</div></h3></section>","LenExceeds<A, [(); 14]>","collectives_westend_integration_tests::XcmHash"],["<section id=\"impl-LenExceeds%3CA,+%5B();+23%5D%3E-for-B\" class=\"impl\"><a href=\"#impl-LenExceeds%3CA,+%5B();+23%5D%3E-for-B\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, O&gt; LenExceeds&lt;A, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">23</a>]&gt; for B<div class=\"where\">where\n    A: Onion&lt;Type = O&gt;,\n    B: Onion&lt;Type = ((((((((((((((((((((((<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(O,)</a>,),),),),),),),),),),),),),),),),),),),),),)&gt;,</div></h3></section>","LenExceeds<A, [(); 23]>","collectives_westend_integration_tests::XcmHash"],["<section id=\"impl-LenExceeds%3CA,+%5B();+9%5D%3E-for-B\" class=\"impl\"><a href=\"#impl-LenExceeds%3CA,+%5B();+9%5D%3E-for-B\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, O&gt; LenExceeds&lt;A, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">9</a>]&gt; for B<div class=\"where\">where\n    A: Onion&lt;Type = O&gt;,\n    B: Onion&lt;Type = ((((((((<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(O,)</a>,),),),),),),),)&gt;,</div></h3></section>","LenExceeds<A, [(); 9]>","collectives_westend_integration_tests::XcmHash"],["<section id=\"impl-LenExceeds%3CA,+%5B();+25%5D%3E-for-B\" class=\"impl\"><a href=\"#impl-LenExceeds%3CA,+%5B();+25%5D%3E-for-B\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, O&gt; LenExceeds&lt;A, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">25</a>]&gt; for B<div class=\"where\">where\n    A: Onion&lt;Type = O&gt;,\n    B: Onion&lt;Type = ((((((((((((((((((((((((<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(O,)</a>,),),),),),),),),),),),),),),),),),),),),),),),)&gt;,</div></h3></section>","LenExceeds<A, [(); 25]>","collectives_westend_integration_tests::XcmHash"],["<section id=\"impl-LenExceeds%3CA,+%5B();+31%5D%3E-for-B\" class=\"impl\"><a href=\"#impl-LenExceeds%3CA,+%5B();+31%5D%3E-for-B\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, O&gt; LenExceeds&lt;A, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">31</a>]&gt; for B<div class=\"where\">where\n    A: Onion&lt;Type = O&gt;,\n    B: Onion&lt;Type = ((((((((((((((((((((((((((((((<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(O,)</a>,),),),),),),),),),),),),),),),),),),),),),),),),),),),),),)&gt;,</div></h3></section>","LenExceeds<A, [(); 31]>","collectives_westend_integration_tests::XcmHash"],["<section id=\"impl-LenExceeds%3CA,+%5B();+17%5D%3E-for-B\" class=\"impl\"><a href=\"#impl-LenExceeds%3CA,+%5B();+17%5D%3E-for-B\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, O&gt; LenExceeds&lt;A, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">17</a>]&gt; for B<div class=\"where\">where\n    A: Onion&lt;Type = O&gt;,\n    B: Onion&lt;Type = ((((((((((((((((<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(O,)</a>,),),),),),),),),),),),),),),),)&gt;,</div></h3></section>","LenExceeds<A, [(); 17]>","collectives_westend_integration_tests::XcmHash"],["<section id=\"impl-LenExceeds%3CA,+%5B();+13%5D%3E-for-B\" class=\"impl\"><a href=\"#impl-LenExceeds%3CA,+%5B();+13%5D%3E-for-B\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, O&gt; LenExceeds&lt;A, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">13</a>]&gt; for B<div class=\"where\">where\n    A: Onion&lt;Type = O&gt;,\n    B: Onion&lt;Type = ((((((((((((<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(O,)</a>,),),),),),),),),),),),)&gt;,</div></h3></section>","LenExceeds<A, [(); 13]>","collectives_westend_integration_tests::XcmHash"],["<section id=\"impl-LenExceeds%3CA,+%5B();+3%5D%3E-for-B\" class=\"impl\"><a href=\"#impl-LenExceeds%3CA,+%5B();+3%5D%3E-for-B\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, O&gt; LenExceeds&lt;A, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">3</a>]&gt; for B<div class=\"where\">where\n    A: Onion&lt;Type = O&gt;,\n    B: Onion&lt;Type = ((<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(O,)</a>,),)&gt;,</div></h3></section>","LenExceeds<A, [(); 3]>","collectives_westend_integration_tests::XcmHash"],["<section id=\"impl-LenExceeds%3CA,+%5B();+21%5D%3E-for-B\" class=\"impl\"><a href=\"#impl-LenExceeds%3CA,+%5B();+21%5D%3E-for-B\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, O&gt; LenExceeds&lt;A, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">21</a>]&gt; for B<div class=\"where\">where\n    A: Onion&lt;Type = O&gt;,\n    B: Onion&lt;Type = ((((((((((((((((((((<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(O,)</a>,),),),),),),),),),),),),),),),),),),),)&gt;,</div></h3></section>","LenExceeds<A, [(); 21]>","collectives_westend_integration_tests::XcmHash"],["<section id=\"impl-LenExceeds%3CA,+%5B();+26%5D%3E-for-B\" class=\"impl\"><a href=\"#impl-LenExceeds%3CA,+%5B();+26%5D%3E-for-B\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, O&gt; LenExceeds&lt;A, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">26</a>]&gt; for B<div class=\"where\">where\n    A: Onion&lt;Type = O&gt;,\n    B: Onion&lt;Type = (((((((((((((((((((((((((<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(O,)</a>,),),),),),),),),),),),),),),),),),),),),),),),),)&gt;,</div></h3></section>","LenExceeds<A, [(); 26]>","collectives_westend_integration_tests::XcmHash"],["<section id=\"impl-LenExceeds%3CA,+%5B();+11%5D%3E-for-B\" class=\"impl\"><a href=\"#impl-LenExceeds%3CA,+%5B();+11%5D%3E-for-B\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, O&gt; LenExceeds&lt;A, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">11</a>]&gt; for B<div class=\"where\">where\n    A: Onion&lt;Type = O&gt;,\n    B: Onion&lt;Type = ((((((((((<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(O,)</a>,),),),),),),),),),)&gt;,</div></h3></section>","LenExceeds<A, [(); 11]>","collectives_westend_integration_tests::XcmHash"],["<section id=\"impl-LenExceeds%3CA,+%5B();+2%5D%3E-for-B\" class=\"impl\"><a href=\"#impl-LenExceeds%3CA,+%5B();+2%5D%3E-for-B\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, O&gt; LenExceeds&lt;A, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">2</a>]&gt; for B<div class=\"where\">where\n    A: Onion&lt;Type = O&gt;,\n    B: Onion&lt;Type = (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(O,)</a>,)&gt;,</div></h3></section>","LenExceeds<A, [(); 2]>","collectives_westend_integration_tests::XcmHash"],["<section id=\"impl-LenExceeds%3CA,+%5B();+4%5D%3E-for-B\" class=\"impl\"><a href=\"#impl-LenExceeds%3CA,+%5B();+4%5D%3E-for-B\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, O&gt; LenExceeds&lt;A, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">4</a>]&gt; for B<div class=\"where\">where\n    A: Onion&lt;Type = O&gt;,\n    B: Onion&lt;Type = (((<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(O,)</a>,),),)&gt;,</div></h3></section>","LenExceeds<A, [(); 4]>","collectives_westend_integration_tests::XcmHash"],["<section id=\"impl-LenExceeds%3CA,+%5B();+22%5D%3E-for-B\" class=\"impl\"><a href=\"#impl-LenExceeds%3CA,+%5B();+22%5D%3E-for-B\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, O&gt; LenExceeds&lt;A, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">22</a>]&gt; for B<div class=\"where\">where\n    A: Onion&lt;Type = O&gt;,\n    B: Onion&lt;Type = (((((((((((((((((((((<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(O,)</a>,),),),),),),),),),),),),),),),),),),),),)&gt;,</div></h3></section>","LenExceeds<A, [(); 22]>","collectives_westend_integration_tests::XcmHash"],["<section id=\"impl-LenExceeds%3CA,+%5B();+8%5D%3E-for-B\" class=\"impl\"><a href=\"#impl-LenExceeds%3CA,+%5B();+8%5D%3E-for-B\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, O&gt; LenExceeds&lt;A, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">8</a>]&gt; for B<div class=\"where\">where\n    A: Onion&lt;Type = O&gt;,\n    B: Onion&lt;Type = (((((((<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(O,)</a>,),),),),),),)&gt;,</div></h3></section>","LenExceeds<A, [(); 8]>","collectives_westend_integration_tests::XcmHash"],["<section id=\"impl-LenExceeds%3CA,+%5B();+29%5D%3E-for-B\" class=\"impl\"><a href=\"#impl-LenExceeds%3CA,+%5B();+29%5D%3E-for-B\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, O&gt; LenExceeds&lt;A, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">29</a>]&gt; for B<div class=\"where\">where\n    A: Onion&lt;Type = O&gt;,\n    B: Onion&lt;Type = ((((((((((((((((((((((((((((<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(O,)</a>,),),),),),),),),),),),),),),),),),),),),),),),),),),),)&gt;,</div></h3></section>","LenExceeds<A, [(); 29]>","collectives_westend_integration_tests::XcmHash"],["<section id=\"impl-LenExceeds%3CA,+%5B();+19%5D%3E-for-B\" class=\"impl\"><a href=\"#impl-LenExceeds%3CA,+%5B();+19%5D%3E-for-B\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, O&gt; LenExceeds&lt;A, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">19</a>]&gt; for B<div class=\"where\">where\n    A: Onion&lt;Type = O&gt;,\n    B: Onion&lt;Type = ((((((((((((((((((<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(O,)</a>,),),),),),),),),),),),),),),),),),)&gt;,</div></h3></section>","LenExceeds<A, [(); 19]>","collectives_westend_integration_tests::XcmHash"],["<section id=\"impl-LenExceeds%3CA,+%5B();+32%5D%3E-for-B\" class=\"impl\"><a href=\"#impl-LenExceeds%3CA,+%5B();+32%5D%3E-for-B\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, O&gt; LenExceeds&lt;A, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]&gt; for B<div class=\"where\">where\n    A: Onion&lt;Type = O&gt;,\n    B: Onion&lt;Type = (((((((((((((((((((((((((((((((<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(O,)</a>,),),),),),),),),),),),),),),),),),),),),),),),),),),),),),),)&gt;,</div></h3></section>","LenExceeds<A, [(); 32]>","collectives_westend_integration_tests::XcmHash"],["<section id=\"impl-LenExceeds%3CA,+%5B();+1%5D%3E-for-B\" class=\"impl\"><a href=\"#impl-LenExceeds%3CA,+%5B();+1%5D%3E-for-B\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, O&gt; LenExceeds&lt;A, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">1</a>]&gt; for B<div class=\"where\">where\n    A: Onion&lt;Type = O&gt;,\n    B: Onion&lt;Type = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(O,)</a>&gt;,</div></h3></section>","LenExceeds<A, [(); 1]>","collectives_westend_integration_tests::XcmHash"],["<section id=\"impl-LenExceeds%3CA,+%5B();+6%5D%3E-for-B\" class=\"impl\"><a href=\"#impl-LenExceeds%3CA,+%5B();+6%5D%3E-for-B\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, O&gt; LenExceeds&lt;A, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">6</a>]&gt; for B<div class=\"where\">where\n    A: Onion&lt;Type = O&gt;,\n    B: Onion&lt;Type = (((((<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(O,)</a>,),),),),)&gt;,</div></h3></section>","LenExceeds<A, [(); 6]>","collectives_westend_integration_tests::XcmHash"],["<section id=\"impl-LenExceeds%3CA,+%5BO;+0%5D%3E-for-Tuple\" class=\"impl\"><a href=\"#impl-LenExceeds%3CA,+%5BO;+0%5D%3E-for-Tuple\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, O, Array, Tuple&gt; LenExceeds&lt;A, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[O; 0]</a>&gt; for Tuple<div class=\"where\">where\n    Tuple: LenEq&lt;Array = Array&gt;,\n    Array: LenExceeds&lt;A, O&gt;,</div></h3></section>","LenExceeds<A, [O; 0]>","collectives_westend_integration_tests::XcmHash"],["<section id=\"impl-LenExceeds%3CA,+%5B();+16%5D%3E-for-B\" class=\"impl\"><a href=\"#impl-LenExceeds%3CA,+%5B();+16%5D%3E-for-B\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, O&gt; LenExceeds&lt;A, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">16</a>]&gt; for B<div class=\"where\">where\n    A: Onion&lt;Type = O&gt;,\n    B: Onion&lt;Type = (((((((((((((((<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(O,)</a>,),),),),),),),),),),),),),),)&gt;,</div></h3></section>","LenExceeds<A, [(); 16]>","collectives_westend_integration_tests::XcmHash"],["<section id=\"impl-LenExceeds%3CA,+%5B();+5%5D%3E-for-B\" class=\"impl\"><a href=\"#impl-LenExceeds%3CA,+%5B();+5%5D%3E-for-B\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, O&gt; LenExceeds&lt;A, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">5</a>]&gt; for B<div class=\"where\">where\n    A: Onion&lt;Type = O&gt;,\n    B: Onion&lt;Type = ((((<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(O,)</a>,),),),)&gt;,</div></h3></section>","LenExceeds<A, [(); 5]>","collectives_westend_integration_tests::XcmHash"],["<section id=\"impl-LenExceeds%3CA,+%5B();+27%5D%3E-for-B\" class=\"impl\"><a href=\"#impl-LenExceeds%3CA,+%5B();+27%5D%3E-for-B\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, O&gt; LenExceeds&lt;A, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">27</a>]&gt; for B<div class=\"where\">where\n    A: Onion&lt;Type = O&gt;,\n    B: Onion&lt;Type = ((((((((((((((((((((((((((<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(O,)</a>,),),),),),),),),),),),),),),),),),),),),),),),),),)&gt;,</div></h3></section>","LenExceeds<A, [(); 27]>","collectives_westend_integration_tests::XcmHash"]],
"cumulus_primitives_core":[],
"frame_support":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/array/mod.rs.html#313\">source</a></span><a href=\"#impl-Debug-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/array/mod.rs.html#314\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.77.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","frame_support::pallet_prelude::InherentIdentifier","frame_support::traits::tokens::currency::lockable::LockIdentifier","frame_support::traits::schedule::v3::TaskName","frame_support::ConsensusEngineId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-%5BT;+N%5D\" class=\"impl\"><a href=\"#impl-Encode-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"frame_support/pallet_prelude/trait.Encode.html\" title=\"trait frame_support::pallet_prelude::Encode\">Encode</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"frame_support/pallet_prelude/trait.Encode.html\" title=\"trait frame_support::pallet_prelude::Encode\">Encode</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/pallet_prelude/trait.Encode.html#method.size_hint\" class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>If possible give a hint of expected size of the encoding. <a href=\"frame_support/pallet_prelude/trait.Encode.html#method.size_hint\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to\" class=\"method trait-impl\"><a href=\"#method.encode_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/pallet_prelude/trait.Encode.html#method.encode_to\" class=\"fn\">encode_to</a>&lt;W&gt;(&amp;self, dest: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut W</a>)<div class=\"where\">where\n    W: Output + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Convert self to a slice and append it to the destination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/pallet_prelude/trait.Encode.html#method.encode\" class=\"fn\">encode</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Convert self to an owned vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.using_encoded\" class=\"method trait-impl\"><a href=\"#method.using_encoded\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/pallet_prelude/trait.Encode.html#method.using_encoded\" class=\"fn\">using_encoded</a>&lt;R, F&gt;(&amp;self, f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]) -&gt; R,</div></h4></section></summary><div class='docblock'>Convert self to a slice and then invoke the given closure with it.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_size\" class=\"method trait-impl\"><a href=\"#method.encoded_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/pallet_prelude/trait.Encode.html#method.encoded_size\" class=\"fn\">encoded_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculates the encoded size. <a href=\"frame_support/pallet_prelude/trait.Encode.html#method.encoded_size\">Read more</a></div></details></div></details>","Encode","frame_support::pallet_prelude::InherentIdentifier","frame_support::traits::tokens::currency::lockable::LockIdentifier","frame_support::traits::schedule::v3::TaskName","frame_support::ConsensusEngineId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MaxEncodedLen-for-%5BT;+N%5D\" class=\"impl\"><a href=\"#impl-MaxEncodedLen-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"frame_support/pallet_prelude/trait.MaxEncodedLen.html\" title=\"trait frame_support::pallet_prelude::MaxEncodedLen\">MaxEncodedLen</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"frame_support/pallet_prelude/trait.MaxEncodedLen.html\" title=\"trait frame_support::pallet_prelude::MaxEncodedLen\">MaxEncodedLen</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_encoded_len\" class=\"method trait-impl\"><a href=\"#method.max_encoded_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/pallet_prelude/trait.MaxEncodedLen.html#tymethod.max_encoded_len\" class=\"fn\">max_encoded_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Upper bound, in bytes, of the maximum encoded size of this item.</div></details></div></details>","MaxEncodedLen","frame_support::pallet_prelude::InherentIdentifier","frame_support::traits::tokens::currency::lockable::LockIdentifier","frame_support::traits::schedule::v3::TaskName","frame_support::ConsensusEngineId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode-for-%5BT;+N%5D\" class=\"impl\"><a href=\"#impl-Decode-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"frame_support/pallet_prelude/trait.Decode.html\" title=\"trait frame_support::pallet_prelude::Decode\">Decode</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"frame_support/pallet_prelude/trait.Decode.html\" title=\"trait frame_support::pallet_prelude::Decode\">Decode</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/pallet_prelude/trait.Decode.html#tymethod.decode\" class=\"fn\">decode</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>, Error&gt;<div class=\"where\">where\n    I: Input,</div></h4></section></summary><div class='docblock'>Attempt to deserialise the value from input.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_into\" class=\"method trait-impl\"><a href=\"#method.decode_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/pallet_prelude/trait.Decode.html#method.decode_into\" class=\"fn\">decode_into</a>&lt;I&gt;(\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut I</a>,\n    dst: &amp;mut <a class=\"union\" href=\"https://doc.rust-lang.org/1.77.0/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DecodeFinished, Error&gt;<div class=\"where\">where\n    I: Input,</div></h4></section></summary><div class='docblock'>Attempt to deserialize the value from input into a pre-allocated piece of memory. <a href=\"frame_support/pallet_prelude/trait.Decode.html#method.decode_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><a href=\"#method.skip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/pallet_prelude/trait.Decode.html#method.skip\" class=\"fn\">skip</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, Error&gt;<div class=\"where\">where\n    I: Input,</div></h4></section></summary><div class='docblock'>Attempt to skip the encoded value from input. <a href=\"frame_support/pallet_prelude/trait.Decode.html#method.skip\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_fixed_size\" class=\"method trait-impl\"><a href=\"#method.encoded_fixed_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/pallet_prelude/trait.Decode.html#method.encoded_fixed_size\" class=\"fn\">encoded_fixed_size</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the fixed encoded size of the type. <a href=\"frame_support/pallet_prelude/trait.Decode.html#method.encoded_fixed_size\">Read more</a></div></details></div></details>","Decode","frame_support::pallet_prelude::InherentIdentifier","frame_support::traits::tokens::currency::lockable::LockIdentifier","frame_support::traits::schedule::v3::TaskName","frame_support::ConsensusEngineId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeInfo-for-%5BT;+N%5D\" class=\"impl\"><a href=\"#impl-TypeInfo-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"frame_support/pallet_prelude/trait.TypeInfo.html\" title=\"trait frame_support::pallet_prelude::TypeInfo\">TypeInfo</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"frame_support/pallet_prelude/trait.TypeInfo.html\" title=\"trait frame_support::pallet_prelude::TypeInfo\">TypeInfo</a> + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Identity\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Identity\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"frame_support/pallet_prelude/trait.TypeInfo.html#associatedtype.Identity\" class=\"associatedtype\">Identity</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a></h4></section></summary><div class='docblock'>The type identifying for which type info is provided. <a href=\"frame_support/pallet_prelude/trait.TypeInfo.html#associatedtype.Identity\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a href=\"#method.type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/pallet_prelude/trait.TypeInfo.html#tymethod.type_info\" class=\"fn\">type_info</a>() -&gt; Type</h4></section></summary><div class='docblock'>Returns the static type identifier for <code>Self</code>.</div></details></div></details>","TypeInfo","frame_support::pallet_prelude::InherentIdentifier","frame_support::traits::tokens::currency::lockable::LockIdentifier","frame_support::traits::schedule::v3::TaskName","frame_support::ConsensusEngineId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Printable-for-%5Bu8;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#2235\">source</a><a href=\"#impl-Printable-for-%5Bu8;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"frame_support/trait.Printable.html\" title=\"trait frame_support::Printable\">Printable</a> for [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">N</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.print\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#2236\">source</a><a href=\"#method.print\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/trait.Printable.html#tymethod.print\" class=\"fn\">print</a>(&amp;self)</h4></section></summary><div class='docblock'>Print the object.</div></details></div></details>","Printable","frame_support::pallet_prelude::InherentIdentifier","frame_support::traits::tokens::currency::lockable::LockIdentifier","frame_support::traits::schedule::v3::TaskName","frame_support::ConsensusEngineId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BatchInvert%3C%5BT;+N%5D%3E-for-T\" class=\"impl\"><a href=\"#impl-BatchInvert%3C%5BT;+N%5D%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, T&gt; BatchInvert&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>&gt; for T<div class=\"where\">where\n    T: Invert&lt;Output = <a class=\"struct\" href=\"https://docs.rs/subtle/2.5.0/subtle/struct.CtOption.html\" title=\"struct subtle::CtOption\">CtOption</a>&lt;T&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://docs.rs/subtle/2.5.0/subtle/trait.ConditionallySelectable.html\" title=\"trait subtle::ConditionallySelectable\">ConditionallySelectable</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a></h4></section></summary><div class='docblock'>The output of batch inversion. A container of field elements.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.batch_invert\" class=\"method trait-impl\"><a href=\"#method.batch_invert\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">batch_invert</a>(field_elements: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/subtle/2.5.0/subtle/struct.CtOption.html\" title=\"struct subtle::CtOption\">CtOption</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>&gt;</h4></section></summary><div class='docblock'>Invert a batch of field elements.</div></details></div></details>","BatchInvert<[T; N]>","frame_support::pallet_prelude::InherentIdentifier","frame_support::traits::tokens::currency::lockable::LockIdentifier","frame_support::traits::schedule::v3::TaskName","frame_support::ConsensusEngineId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletError-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/error.rs.html#71-73\">source</a><a href=\"#impl-PalletError-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"frame_support/traits/trait.PalletError.html\" title=\"trait frame_support::traits::PalletError\">PalletError</a>, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"frame_support/traits/trait.PalletError.html\" title=\"trait frame_support::traits::PalletError\">PalletError</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX_ENCODED_SIZE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/error.rs.html#72\">source</a><a href=\"#associatedconstant.MAX_ENCODED_SIZE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"frame_support/traits/trait.PalletError.html#associatedconstant.MAX_ENCODED_SIZE\" class=\"constant\">MAX_ENCODED_SIZE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a> = _</h4></section></summary><div class='docblock'>The maximum encoded size for the implementing type. <a href=\"frame_support/traits/trait.PalletError.html#associatedconstant.MAX_ENCODED_SIZE\">Read more</a></div></details></div></details>","PalletError","frame_support::pallet_prelude::InherentIdentifier","frame_support::traits::tokens::currency::lockable::LockIdentifier","frame_support::traits::schedule::v3::TaskName","frame_support::ConsensusEngineId"]],
"pallet_atomic_swap":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BatchInvert%3C%5BT;+N%5D%3E-for-T\" class=\"impl\"><a href=\"#impl-BatchInvert%3C%5BT;+N%5D%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, T&gt; BatchInvert&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>&gt; for T<div class=\"where\">where\n    T: Invert&lt;Output = <a class=\"struct\" href=\"https://docs.rs/subtle/2.5.0/subtle/struct.CtOption.html\" title=\"struct subtle::CtOption\">CtOption</a>&lt;T&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://docs.rs/subtle/2.5.0/subtle/trait.ConditionallySelectable.html\" title=\"trait subtle::ConditionallySelectable\">ConditionallySelectable</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a></h4></section></summary><div class='docblock'>The output of batch inversion. A container of field elements.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.batch_invert\" class=\"method trait-impl\"><a href=\"#method.batch_invert\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">batch_invert</a>(field_elements: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/subtle/2.5.0/subtle/struct.CtOption.html\" title=\"struct subtle::CtOption\">CtOption</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>&gt;</h4></section></summary><div class='docblock'>Invert a batch of field elements.</div></details></div></details>","BatchInvert<[T; N]>","pallet_atomic_swap::HashedProof"]],
"pallet_contracts_mock_network":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BatchInvert%3C%5BT;+N%5D%3E-for-T\" class=\"impl\"><a href=\"#impl-BatchInvert%3C%5BT;+N%5D%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, T&gt; BatchInvert&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>&gt; for T<div class=\"where\">where\n    T: Invert&lt;Output = <a class=\"struct\" href=\"https://docs.rs/subtle/2.5.0/subtle/struct.CtOption.html\" title=\"struct subtle::CtOption\">CtOption</a>&lt;T&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://docs.rs/subtle/2.5.0/subtle/trait.ConditionallySelectable.html\" title=\"trait subtle::ConditionallySelectable\">ConditionallySelectable</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a></h4></section></summary><div class='docblock'>The output of batch inversion. A container of field elements.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.batch_invert\" class=\"method trait-impl\"><a href=\"#method.batch_invert\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">batch_invert</a>(field_elements: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/subtle/2.5.0/subtle/struct.CtOption.html\" title=\"struct subtle::CtOption\">CtOption</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>&gt;</h4></section></summary><div class='docblock'>Invert a batch of field elements.</div></details></div></details>","BatchInvert<[T; N]>","pallet_contracts_mock_network::mocks::msg_queue::pallet::MessageId"]],
"polkadot_core_primitives":[],
"polkadot_node_primitives":[],
"polkadot_primitives":[],
"polkadot_sdk_frame":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/array/mod.rs.html#364\">source</a></span><a href=\"#impl-PartialOrd-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/array/mod.rs.html#366\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/array/mod.rs.html#370\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/array/mod.rs.html#374\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/array/mod.rs.html#378\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/array/mod.rs.html#382\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details></div></details>","PartialOrd","polkadot_sdk_frame::traits::LockIdentifier","polkadot_sdk_frame::traits::schedule::v3::TaskName"],["<section id=\"impl-ConstParamTy-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/marker.rs.html#1068-1079\">source</a><a href=\"#impl-ConstParamTy-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.ConstParamTy.html\" title=\"trait core::marker::ConstParamTy\">ConstParamTy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.ConstParamTy.html\" title=\"trait core::marker::ConstParamTy\">ConstParamTy</a>,</div></h3></section>","ConstParamTy","polkadot_sdk_frame::traits::LockIdentifier","polkadot_sdk_frame::traits::schedule::v3::TaskName"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/array/mod.rs.html#306\">source</a></span><a href=\"#impl-Hash-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"docblock\"><p>The hash of an array is the same as that of the corresponding slice,\nas required by the <code>Borrow</code> implementation.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::hash::BuildHasher;\n\n<span class=\"kw\">let </span>b = std::hash::RandomState::new();\n<span class=\"kw\">let </span>a: [u8; <span class=\"number\">3</span>] = [<span class=\"number\">0xa8</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x09</span>];\n<span class=\"kw\">let </span>s: <span class=\"kw-2\">&amp;</span>[u8] = <span class=\"kw-2\">&amp;</span>[<span class=\"number\">0xa8</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x09</span>];\n<span class=\"macro\">assert_eq!</span>(b.hash_one(a), b.hash_one(s));</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/array/mod.rs.html#307\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.77.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.77.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.77.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.77.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","polkadot_sdk_frame::traits::LockIdentifier","polkadot_sdk_frame::traits::schedule::v3::TaskName"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CI%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/array/mod.rs.html#340-342\">source</a></span><a href=\"#impl-Index%3CI%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;I&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.77.0/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.slice.html\">[T]</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/index/trait.Index.html#associatedtype.Output\" title=\"type core::ops::index::Index::Output\">Output</a></h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/array/mod.rs.html#347\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.0/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: I) -&gt; &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/index/trait.Index.html#associatedtype.Output\" title=\"type core::ops::index::Index::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.77.0/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<I>","polkadot_sdk_frame::traits::LockIdentifier","polkadot_sdk_frame::traits::schedule::v3::TaskName"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BorrowMut%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/array/mod.rs.html#182\">source</a></span><a href=\"#impl-BorrowMut%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/borrow/trait.BorrowMut.html\" title=\"trait core::borrow::BorrowMut\">BorrowMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/array/mod.rs.html#183\">source</a><a href=\"#method.borrow_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut\" class=\"fn\">borrow_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Mutably borrows from an owned value. <a href=\"https://doc.rust-lang.org/1.77.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut\">Read more</a></div></details></div></details>","BorrowMut<[T]>","polkadot_sdk_frame::traits::LockIdentifier","polkadot_sdk_frame::traits::schedule::v3::TaskName"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3CI%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/array/mod.rs.html#353-355\">source</a></span><a href=\"#impl-IndexMut%3CI%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;I&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/array/mod.rs.html#358\">source</a><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(&amp;mut self, index: I) -&gt; &amp;mut &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/index/trait.Index.html#associatedtype.Output\" title=\"type core::ops::index::Index::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.77.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<I>","polkadot_sdk_frame::traits::LockIdentifier","polkadot_sdk_frame::traits::schedule::v3::TaskName"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0\">1.53.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/array/iter.rs.html#45\">source</a></span><a href=\"#impl-IntoIterator-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/array/iter.rs.html#57\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.0/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.77.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class=\"docblock\"><p>Creates a consuming iterator, that is, one that moves each value out of\nthe array (from start to end). The array cannot be used after calling\nthis unless <code>T</code> implements <code>Copy</code>, so the whole array is copied.</p>\n<p>Arrays have special behavior when calling <code>.into_iter()</code> prior to the\n2021 edition – see the <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\" title=\"primitive array\">array</a> Editions section for more information.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.77.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.77.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details></div></details>","IntoIterator","polkadot_sdk_frame::traits::LockIdentifier","polkadot_sdk_frame::traits::schedule::v3::TaskName"],["<section id=\"impl-StructuralPartialEq-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/marker.rs.html#214-226\">source</a><a href=\"#impl-StructuralPartialEq-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a></h3></section>","StructuralPartialEq","polkadot_sdk_frame::traits::LockIdentifier","polkadot_sdk_frame::traits::schedule::v3::TaskName"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/array/mod.rs.html#313\">source</a></span><a href=\"#impl-Debug-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"polkadot_sdk_frame/derive/trait.Debug.html\" title=\"trait polkadot_sdk_frame::derive::Debug\">Debug</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"polkadot_sdk_frame/derive/trait.Debug.html\" title=\"trait polkadot_sdk_frame::derive::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/array/mod.rs.html#314\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polkadot_sdk_frame/derive/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"polkadot_sdk_frame/derive/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","polkadot_sdk_frame::traits::LockIdentifier","polkadot_sdk_frame::traits::schedule::v3::TaskName"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Borrow%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/array/mod.rs.html#175\">source</a></span><a href=\"#impl-Borrow%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/array/mod.rs.html#176\">source</a><a href=\"#method.borrow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.0/core/borrow/trait.Borrow.html#tymethod.borrow\" class=\"fn\">borrow</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Immutably borrows from an owned value. <a href=\"https://doc.rust-lang.org/1.77.0/core/borrow/trait.Borrow.html#tymethod.borrow\">Read more</a></div></details></div></details>","Borrow<[T]>","polkadot_sdk_frame::traits::LockIdentifier","polkadot_sdk_frame::traits::schedule::v3::TaskName"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SlicePattern-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.51.0\">1.51.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/slice/mod.rs.html#4697\">source</a></span><a href=\"#impl-SlicePattern-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/slice/trait.SlicePattern.html\" title=\"trait core::slice::SlicePattern\">SlicePattern</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.77.0/core/slice/trait.SlicePattern.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>slice_pattern</code>)</span></div></span><div class='docblock'>The element type of the slice being matched on.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/slice/mod.rs.html#4701\">source</a><a href=\"#method.as_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.0/core/slice/trait.SlicePattern.html#tymethod.as_slice\" class=\"fn\">as_slice</a>(&amp;self) -&gt; &amp;[&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/slice/trait.SlicePattern.html\" title=\"trait core::slice::SlicePattern\">SlicePattern</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.77.0/core/slice/trait.SlicePattern.html#associatedtype.Item\" title=\"type core::slice::SlicePattern::Item\">Item</a>]</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>slice_pattern</code>)</span></div></span><div class='docblock'>Currently, the consumers of <code>SlicePattern</code> need a slice.</div></details></div></details>","SlicePattern","polkadot_sdk_frame::traits::LockIdentifier","polkadot_sdk_frame::traits::schedule::v3::TaskName"],["<section id=\"impl-Eq-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/array/equality.rs.html#130\">source</a></span><a href=\"#impl-Eq-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","polkadot_sdk_frame::traits::LockIdentifier","polkadot_sdk_frame::traits::schedule::v3::TaskName"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/array/mod.rs.html#389\">source</a></span><a href=\"#impl-Ord-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h3></section></summary><div class=\"docblock\"><p>Implements comparison of arrays <a href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.Ord.html#lexicographical-comparison\" title=\"trait core::cmp::Ord\">lexicographically</a>.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/array/mod.rs.html#391\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.77.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/cmp.rs.html#830-832\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/cmp.rs.html#850-852\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/cmp.rs.html#875-878\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","polkadot_sdk_frame::traits::LockIdentifier","polkadot_sdk_frame::traits::schedule::v3::TaskName"],["<section id=\"impl-Copy-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.58.0\">1.58.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/array/mod.rs.html#397\">source</a></span><a href=\"#impl-Copy-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section>","Copy","polkadot_sdk_frame::traits::LockIdentifier","polkadot_sdk_frame::traits::schedule::v3::TaskName"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%26mut+%5BB%5D%3E-for-%5BA;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/array/equality.rs.html#96-98\">source</a></span><a href=\"#impl-PartialEq%3C%26mut+%5BB%5D%3E-for-%5BA;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.slice.html\">[B]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[A; N]</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/array/equality.rs.html#101\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.slice.html\">[B]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/array/equality.rs.html#105\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.slice.html\">[B]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<&mut [B]>","polkadot_sdk_frame::traits::LockIdentifier","polkadot_sdk_frame::traits::schedule::v3::TaskName"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%5BB;+N%5D%3E-for-%5BA;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/array/equality.rs.html#5-7\">source</a></span><a href=\"#impl-PartialEq%3C%5BB;+N%5D%3E-for-%5BA;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[B; N]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[A; N]</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/array/equality.rs.html#10\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[B; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/array/equality.rs.html#14\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[B; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<[B; N]>","polkadot_sdk_frame::traits::LockIdentifier","polkadot_sdk_frame::traits::schedule::v3::TaskName"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%5BB%5D%3E-for-%5BA;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/array/equality.rs.html#20-22\">source</a></span><a href=\"#impl-PartialEq%3C%5BB%5D%3E-for-%5BA;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.slice.html\">[B]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[A; N]</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/array/equality.rs.html#25\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.slice.html\">[B]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/array/equality.rs.html#33\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.slice.html\">[B]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<[B]>","polkadot_sdk_frame::traits::LockIdentifier","polkadot_sdk_frame::traits::schedule::v3::TaskName"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%26%5BB%5D%3E-for-%5BA;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/array/equality.rs.html#66-68\">source</a></span><a href=\"#impl-PartialEq%3C%26%5BB%5D%3E-for-%5BA;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.slice.html\">[B]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[A; N]</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/array/equality.rs.html#71\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.slice.html\">[B]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/array/equality.rs.html#75\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.slice.html\">[B]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<&[B]>","polkadot_sdk_frame::traits::LockIdentifier","polkadot_sdk_frame::traits::schedule::v3::TaskName"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletError-for-%5BT;+N%5D\" class=\"impl\"><a href=\"#impl-PalletError-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"polkadot_sdk_frame/traits/trait.PalletError.html\" title=\"trait polkadot_sdk_frame::traits::PalletError\">PalletError</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"polkadot_sdk_frame/traits/trait.PalletError.html\" title=\"trait polkadot_sdk_frame::traits::PalletError\">PalletError</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX_ENCODED_SIZE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MAX_ENCODED_SIZE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"polkadot_sdk_frame/traits/trait.PalletError.html#associatedconstant.MAX_ENCODED_SIZE\" class=\"constant\">MAX_ENCODED_SIZE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a> = _</h4></section></summary><div class='docblock'>The maximum encoded size for the implementing type. <a href=\"polkadot_sdk_frame/traits/trait.PalletError.html#associatedconstant.MAX_ENCODED_SIZE\">Read more</a></div></details></div></details>","PalletError","polkadot_sdk_frame::traits::LockIdentifier","polkadot_sdk_frame::traits::schedule::v3::TaskName"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-%5BT;+N%5D\" class=\"impl\"><a href=\"#impl-Encode-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"polkadot_sdk_frame/derive/trait.Encode.html\" title=\"trait polkadot_sdk_frame::derive::Encode\">Encode</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"polkadot_sdk_frame/derive/trait.Encode.html\" title=\"trait polkadot_sdk_frame::derive::Encode\">Encode</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polkadot_sdk_frame/derive/trait.Encode.html#method.size_hint\" class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>If possible give a hint of expected size of the encoding. <a href=\"polkadot_sdk_frame/derive/trait.Encode.html#method.size_hint\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to\" class=\"method trait-impl\"><a href=\"#method.encode_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polkadot_sdk_frame/derive/trait.Encode.html#method.encode_to\" class=\"fn\">encode_to</a>&lt;W&gt;(&amp;self, dest: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut W</a>)<div class=\"where\">where\n    W: Output + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Convert self to a slice and append it to the destination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polkadot_sdk_frame/derive/trait.Encode.html#method.encode\" class=\"fn\">encode</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Convert self to an owned vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.using_encoded\" class=\"method trait-impl\"><a href=\"#method.using_encoded\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polkadot_sdk_frame/derive/trait.Encode.html#method.using_encoded\" class=\"fn\">using_encoded</a>&lt;R, F&gt;(&amp;self, f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]) -&gt; R,</div></h4></section></summary><div class='docblock'>Convert self to a slice and then invoke the given closure with it.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_size\" class=\"method trait-impl\"><a href=\"#method.encoded_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polkadot_sdk_frame/derive/trait.Encode.html#method.encoded_size\" class=\"fn\">encoded_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculates the encoded size. <a href=\"polkadot_sdk_frame/derive/trait.Encode.html#method.encoded_size\">Read more</a></div></details></div></details>","Encode","polkadot_sdk_frame::traits::LockIdentifier","polkadot_sdk_frame::traits::schedule::v3::TaskName"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MaxEncodedLen-for-%5BT;+N%5D\" class=\"impl\"><a href=\"#impl-MaxEncodedLen-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; MaxEncodedLen for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: MaxEncodedLen,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_encoded_len\" class=\"method trait-impl\"><a href=\"#method.max_encoded_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">max_encoded_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Upper bound, in bytes, of the maximum encoded size of this item.</div></details></div></details>","MaxEncodedLen","polkadot_sdk_frame::traits::LockIdentifier","polkadot_sdk_frame::traits::schedule::v3::TaskName"],["<section id=\"impl-EncodeLike%3C%5BU;+N%5D%3E-for-%5BT;+N%5D\" class=\"impl\"><a href=\"#impl-EncodeLike%3C%5BU;+N%5D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; EncodeLike&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[U; N]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: EncodeLike&lt;U&gt;,\n    U: <a class=\"trait\" href=\"polkadot_sdk_frame/derive/trait.Encode.html\" title=\"trait polkadot_sdk_frame::derive::Encode\">Encode</a>,</div></h3></section>","EncodeLike<[U; N]>","polkadot_sdk_frame::traits::LockIdentifier","polkadot_sdk_frame::traits::schedule::v3::TaskName"],["<section id=\"impl-ConstEncodedLen-for-%5BT;+N%5D\" class=\"impl\"><a href=\"#impl-ConstEncodedLen-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; ConstEncodedLen for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: ConstEncodedLen,</div></h3></section>","ConstEncodedLen","polkadot_sdk_frame::traits::LockIdentifier","polkadot_sdk_frame::traits::schedule::v3::TaskName"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode-for-%5BT;+N%5D\" class=\"impl\"><a href=\"#impl-Decode-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"polkadot_sdk_frame/derive/trait.Decode.html\" title=\"trait polkadot_sdk_frame::derive::Decode\">Decode</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"polkadot_sdk_frame/derive/trait.Decode.html\" title=\"trait polkadot_sdk_frame::derive::Decode\">Decode</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polkadot_sdk_frame/derive/trait.Decode.html#tymethod.decode\" class=\"fn\">decode</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>, Error&gt;<div class=\"where\">where\n    I: Input,</div></h4></section></summary><div class='docblock'>Attempt to deserialise the value from input.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_into\" class=\"method trait-impl\"><a href=\"#method.decode_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polkadot_sdk_frame/derive/trait.Decode.html#method.decode_into\" class=\"fn\">decode_into</a>&lt;I&gt;(\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut I</a>,\n    dst: &amp;mut <a class=\"union\" href=\"https://doc.rust-lang.org/1.77.0/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DecodeFinished, Error&gt;<div class=\"where\">where\n    I: Input,</div></h4></section></summary><div class='docblock'>Attempt to deserialize the value from input into a pre-allocated piece of memory. <a href=\"polkadot_sdk_frame/derive/trait.Decode.html#method.decode_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><a href=\"#method.skip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polkadot_sdk_frame/derive/trait.Decode.html#method.skip\" class=\"fn\">skip</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, Error&gt;<div class=\"where\">where\n    I: Input,</div></h4></section></summary><div class='docblock'>Attempt to skip the encoded value from input. <a href=\"polkadot_sdk_frame/derive/trait.Decode.html#method.skip\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_fixed_size\" class=\"method trait-impl\"><a href=\"#method.encoded_fixed_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polkadot_sdk_frame/derive/trait.Decode.html#method.encoded_fixed_size\" class=\"fn\">encoded_fixed_size</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the fixed encoded size of the type. <a href=\"polkadot_sdk_frame/derive/trait.Decode.html#method.encoded_fixed_size\">Read more</a></div></details></div></details>","Decode","polkadot_sdk_frame::traits::LockIdentifier","polkadot_sdk_frame::traits::schedule::v3::TaskName"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeInfo-for-%5BT;+N%5D\" class=\"impl\"><a href=\"#impl-TypeInfo-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"polkadot_sdk_frame/derive/trait.TypeInfo.html\" title=\"trait polkadot_sdk_frame::derive::TypeInfo\">TypeInfo</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"polkadot_sdk_frame/derive/trait.TypeInfo.html\" title=\"trait polkadot_sdk_frame::derive::TypeInfo\">TypeInfo</a> + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Identity\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Identity\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"polkadot_sdk_frame/derive/trait.TypeInfo.html#associatedtype.Identity\" class=\"associatedtype\">Identity</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a></h4></section></summary><div class='docblock'>The type identifying for which type info is provided. <a href=\"polkadot_sdk_frame/derive/trait.TypeInfo.html#associatedtype.Identity\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a href=\"#method.type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polkadot_sdk_frame/derive/trait.TypeInfo.html#tymethod.type_info\" class=\"fn\">type_info</a>() -&gt; Type</h4></section></summary><div class='docblock'>Returns the static type identifier for <code>Self</code>.</div></details></div></details>","TypeInfo","polkadot_sdk_frame::traits::LockIdentifier","polkadot_sdk_frame::traits::schedule::v3::TaskName"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Printable-for-%5Bu8;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#2235\">source</a><a href=\"#impl-Printable-for-%5Bu8;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"polkadot_sdk_frame/traits/trait.Printable.html\" title=\"trait polkadot_sdk_frame::traits::Printable\">Printable</a> for [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">N</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.print\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#2236\">source</a><a href=\"#method.print\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polkadot_sdk_frame/traits/trait.Printable.html#tymethod.print\" class=\"fn\">print</a>(&amp;self)</h4></section></summary><div class='docblock'>Print the object.</div></details></div></details>","Printable","polkadot_sdk_frame::traits::LockIdentifier","polkadot_sdk_frame::traits::schedule::v3::TaskName"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BatchInvert%3C%5BT;+N%5D%3E-for-T\" class=\"impl\"><a href=\"#impl-BatchInvert%3C%5BT;+N%5D%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, T&gt; BatchInvert&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>&gt; for T<div class=\"where\">where\n    T: Invert&lt;Output = <a class=\"struct\" href=\"https://docs.rs/subtle/2.5.0/subtle/struct.CtOption.html\" title=\"struct subtle::CtOption\">CtOption</a>&lt;T&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://docs.rs/subtle/2.5.0/subtle/trait.ConditionallySelectable.html\" title=\"trait subtle::ConditionallySelectable\">ConditionallySelectable</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a></h4></section></summary><div class='docblock'>The output of batch inversion. A container of field elements.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.batch_invert\" class=\"method trait-impl\"><a href=\"#method.batch_invert\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">batch_invert</a>(field_elements: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/subtle/2.5.0/subtle/struct.CtOption.html\" title=\"struct subtle::CtOption\">CtOption</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>&gt;</h4></section></summary><div class='docblock'>Invert a batch of field elements.</div></details></div></details>","BatchInvert<[T; N]>","polkadot_sdk_frame::traits::LockIdentifier","polkadot_sdk_frame::traits::schedule::v3::TaskName"]],
"sc_consensus_babe":[],
"sc_mixnet":[],
"snowbridge_beacon_primitives":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BatchInvert%3C%5BT;+N%5D%3E-for-T\" class=\"impl\"><a href=\"#impl-BatchInvert%3C%5BT;+N%5D%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, T&gt; BatchInvert&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>&gt; for T<div class=\"where\">where\n    T: Invert&lt;Output = <a class=\"struct\" href=\"https://docs.rs/subtle/2.5.0/subtle/struct.CtOption.html\" title=\"struct subtle::CtOption\">CtOption</a>&lt;T&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://docs.rs/subtle/2.5.0/subtle/trait.ConditionallySelectable.html\" title=\"trait subtle::ConditionallySelectable\">ConditionallySelectable</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a></h4></section></summary><div class='docblock'>The output of batch inversion. A container of field elements.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.batch_invert\" class=\"method trait-impl\"><a href=\"#method.batch_invert\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">batch_invert</a>(field_elements: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/subtle/2.5.0/subtle/struct.CtOption.html\" title=\"struct subtle::CtOption\">CtOption</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>&gt;</h4></section></summary><div class='docblock'>Invert a batch of field elements.</div></details></div></details>","BatchInvert<[T; N]>","snowbridge_beacon_primitives::types::ForkVersion"]],
"snowbridge_router_primitives":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BatchInvert%3C%5BT;+N%5D%3E-for-T\" class=\"impl\"><a href=\"#impl-BatchInvert%3C%5BT;+N%5D%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, T&gt; BatchInvert&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>&gt; for T<div class=\"where\">where\n    T: Invert&lt;Output = <a class=\"struct\" href=\"https://docs.rs/subtle/2.5.0/subtle/struct.CtOption.html\" title=\"struct subtle::CtOption\">CtOption</a>&lt;T&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://docs.rs/subtle/2.5.0/subtle/trait.ConditionallySelectable.html\" title=\"trait subtle::ConditionallySelectable\">ConditionallySelectable</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a></h4></section></summary><div class='docblock'>The output of batch inversion. A container of field elements.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.batch_invert\" class=\"method trait-impl\"><a href=\"#method.batch_invert\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">batch_invert</a>(field_elements: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/subtle/2.5.0/subtle/struct.CtOption.html\" title=\"struct subtle::CtOption\">CtOption</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>&gt;</h4></section></summary><div class='docblock'>Invert a batch of field elements.</div></details></div></details>","BatchInvert<[T; N]>","snowbridge_router_primitives::inbound::CallIndex"]],
"sp_consensus_babe":[],
"sp_consensus_beefy":[],
"sp_consensus_sassafras":[],
"sp_inherents":[],
"sp_mixnet":[],
"sp_runtime":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-%5BT;+4%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.204/src/serde/ser/impls.rs.html#166-171\">source</a><a href=\"#impl-Serialize-for-%5BT;+4%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"sp_runtime/trait.Serialize.html\" title=\"trait sp_runtime::Serialize\">Serialize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; 4]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"sp_runtime/trait.Serialize.html\" title=\"trait sp_runtime::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.204/src/serde/ser/impls.rs.html#166-171\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.204/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.204/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.204/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.204/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.204/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"sp_runtime/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","sp_runtime::ConsensusEngineId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-%5BT;+4%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.204/src/serde/de/impls.rs.html#1356-1389\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-%5BT;+4%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T&gt; <a class=\"trait\" href=\"sp_runtime/trait.Deserialize.html\" title=\"trait sp_runtime::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; 4]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"sp_runtime/trait.Deserialize.html\" title=\"trait sp_runtime::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.204/src/serde/de/impls.rs.html#1356-1389\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; 4]</a>, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.204/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.204/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.204/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"sp_runtime/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","sp_runtime::ConsensusEngineId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Printable-for-%5Bu8;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#2235-2239\">source</a><a href=\"#impl-Printable-for-%5Bu8;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"sp_runtime/traits/trait.Printable.html\" title=\"trait sp_runtime::traits::Printable\">Printable</a> for [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">N</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.print\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#2236-2238\">source</a><a href=\"#method.print\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/traits/trait.Printable.html#tymethod.print\" class=\"fn\">print</a>(&amp;self)</h4></section></summary><div class='docblock'>Print the object.</div></details></div></details>","Printable","sp_runtime::ConsensusEngineId"]],
"sp_staking":[],
"sp_statement_store":[],
"sp_version":[],
"staging_xcm":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CAssetInstance%3E-for-%5Bu8;+32%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/staging_xcm/v3/multiasset.rs.html#213-221\">source</a><a href=\"#impl-TryFrom%3CAssetInstance%3E-for-%5Bu8;+32%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"enum\" href=\"staging_xcm/v3/enum.AssetInstance.html\" title=\"enum staging_xcm::v3::AssetInstance\">AssetInstance</a>&gt; for [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.77.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/staging_xcm/v3/multiasset.rs.html#215-220\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(x: <a class=\"enum\" href=\"staging_xcm/v3/enum.AssetInstance.html\" title=\"enum staging_xcm::v3::AssetInstance\">AssetInstance</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<AssetInstance>","staging_xcm::v3::traits::XcmHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CAssetInstance%3E-for-%5Bu8;+32%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/staging_xcm/v4/asset.rs.html#187-195\">source</a><a href=\"#impl-TryFrom%3CAssetInstance%3E-for-%5Bu8;+32%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"enum\" href=\"staging_xcm/v4/enum.AssetInstance.html\" title=\"enum staging_xcm::v4::AssetInstance\">AssetInstance</a>&gt; for [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.77.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/staging_xcm/v4/asset.rs.html#189-194\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(x: <a class=\"enum\" href=\"staging_xcm/v4/enum.AssetInstance.html\" title=\"enum staging_xcm::v4::AssetInstance\">AssetInstance</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<AssetInstance>","staging_xcm::v3::traits::XcmHash"]],
"staging_xcm_builder":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BatchInvert%3C%5BT;+N%5D%3E-for-T\" class=\"impl\"><a href=\"#impl-BatchInvert%3C%5BT;+N%5D%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, T&gt; BatchInvert&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>&gt; for T<div class=\"where\">where\n    T: Invert&lt;Output = <a class=\"struct\" href=\"https://docs.rs/subtle/2.5.0/subtle/struct.CtOption.html\" title=\"struct subtle::CtOption\">CtOption</a>&lt;T&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://docs.rs/subtle/2.5.0/subtle/trait.ConditionallySelectable.html\" title=\"trait subtle::ConditionallySelectable\">ConditionallySelectable</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a></h4></section></summary><div class='docblock'>The output of batch inversion. A container of field elements.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.batch_invert\" class=\"method trait-impl\"><a href=\"#method.batch_invert\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">batch_invert</a>(field_elements: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/subtle/2.5.0/subtle/struct.CtOption.html\" title=\"struct subtle::CtOption\">CtOption</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>&gt;</h4></section></summary><div class='docblock'>Invert a batch of field elements.</div></details></div></details>","BatchInvert<[T; N]>","staging_xcm_builder::test_utils::XcmHash"]],
"xcm_emulator":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/array/mod.rs.html#313\">source</a></span><a href=\"#impl-Debug-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"xcm_emulator/trait.Debug.html\" title=\"trait xcm_emulator::Debug\">Debug</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"xcm_emulator/trait.Debug.html\" title=\"trait xcm_emulator::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/array/mod.rs.html#314\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"xcm_emulator/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"xcm_emulator/fmt/struct.Formatter.html\" title=\"struct xcm_emulator::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"xcm_emulator/fmt/struct.Error.html\" title=\"struct xcm_emulator::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"xcm_emulator/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","xcm_emulator::XcmHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-%5BT;+N%5D\" class=\"impl\"><a href=\"#impl-Encode-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"xcm_emulator/trait.Encode.html\" title=\"trait xcm_emulator::Encode\">Encode</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"xcm_emulator/trait.Encode.html\" title=\"trait xcm_emulator::Encode\">Encode</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"xcm_emulator/trait.Encode.html#method.size_hint\" class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>If possible give a hint of expected size of the encoding. <a href=\"xcm_emulator/trait.Encode.html#method.size_hint\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to\" class=\"method trait-impl\"><a href=\"#method.encode_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"xcm_emulator/trait.Encode.html#method.encode_to\" class=\"fn\">encode_to</a>&lt;W&gt;(&amp;self, dest: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut W</a>)<div class=\"where\">where\n    W: Output + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Convert self to a slice and append it to the destination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"xcm_emulator/trait.Encode.html#method.encode\" class=\"fn\">encode</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Convert self to an owned vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.using_encoded\" class=\"method trait-impl\"><a href=\"#method.using_encoded\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"xcm_emulator/trait.Encode.html#method.using_encoded\" class=\"fn\">using_encoded</a>&lt;R, F&gt;(&amp;self, f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]) -&gt; R,</div></h4></section></summary><div class='docblock'>Convert self to a slice and then invoke the given closure with it.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_size\" class=\"method trait-impl\"><a href=\"#method.encoded_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"xcm_emulator/trait.Encode.html#method.encoded_size\" class=\"fn\">encoded_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculates the encoded size. <a href=\"xcm_emulator/trait.Encode.html#method.encoded_size\">Read more</a></div></details></div></details>","Encode","xcm_emulator::XcmHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MaxEncodedLen-for-%5BT;+N%5D\" class=\"impl\"><a href=\"#impl-MaxEncodedLen-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"xcm_emulator/trait.MaxEncodedLen.html\" title=\"trait xcm_emulator::MaxEncodedLen\">MaxEncodedLen</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"xcm_emulator/trait.MaxEncodedLen.html\" title=\"trait xcm_emulator::MaxEncodedLen\">MaxEncodedLen</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_encoded_len\" class=\"method trait-impl\"><a href=\"#method.max_encoded_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"xcm_emulator/trait.MaxEncodedLen.html#tymethod.max_encoded_len\" class=\"fn\">max_encoded_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Upper bound, in bytes, of the maximum encoded size of this item.</div></details></div></details>","MaxEncodedLen","xcm_emulator::XcmHash"],["<section id=\"impl-EncodeLike%3C%5BU;+N%5D%3E-for-%5BT;+N%5D\" class=\"impl\"><a href=\"#impl-EncodeLike%3C%5BU;+N%5D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"xcm_emulator/trait.EncodeLike.html\" title=\"trait xcm_emulator::EncodeLike\">EncodeLike</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[U; N]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"xcm_emulator/trait.EncodeLike.html\" title=\"trait xcm_emulator::EncodeLike\">EncodeLike</a>&lt;U&gt;,\n    U: <a class=\"trait\" href=\"xcm_emulator/trait.Encode.html\" title=\"trait xcm_emulator::Encode\">Encode</a>,</div></h3></section>","EncodeLike<[U; N]>","xcm_emulator::XcmHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode-for-%5BT;+N%5D\" class=\"impl\"><a href=\"#impl-Decode-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"xcm_emulator/trait.Decode.html\" title=\"trait xcm_emulator::Decode\">Decode</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"xcm_emulator/trait.Decode.html\" title=\"trait xcm_emulator::Decode\">Decode</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"xcm_emulator/trait.Decode.html#tymethod.decode\" class=\"fn\">decode</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>, Error&gt;<div class=\"where\">where\n    I: Input,</div></h4></section></summary><div class='docblock'>Attempt to deserialise the value from input.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_into\" class=\"method trait-impl\"><a href=\"#method.decode_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"xcm_emulator/trait.Decode.html#method.decode_into\" class=\"fn\">decode_into</a>&lt;I&gt;(\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut I</a>,\n    dst: &amp;mut <a class=\"union\" href=\"https://doc.rust-lang.org/1.77.0/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DecodeFinished, Error&gt;<div class=\"where\">where\n    I: Input,</div></h4></section></summary><div class='docblock'>Attempt to deserialize the value from input into a pre-allocated piece of memory. <a href=\"xcm_emulator/trait.Decode.html#method.decode_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><a href=\"#method.skip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"xcm_emulator/trait.Decode.html#method.skip\" class=\"fn\">skip</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, Error&gt;<div class=\"where\">where\n    I: Input,</div></h4></section></summary><div class='docblock'>Attempt to skip the encoded value from input. <a href=\"xcm_emulator/trait.Decode.html#method.skip\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_fixed_size\" class=\"method trait-impl\"><a href=\"#method.encoded_fixed_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"xcm_emulator/trait.Decode.html#method.encoded_fixed_size\" class=\"fn\">encoded_fixed_size</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the fixed encoded size of the type. <a href=\"xcm_emulator/trait.Decode.html#method.encoded_fixed_size\">Read more</a></div></details></div></details>","Decode","xcm_emulator::XcmHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BatchInvert%3C%5BT;+N%5D%3E-for-T\" class=\"impl\"><a href=\"#impl-BatchInvert%3C%5BT;+N%5D%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, T&gt; BatchInvert&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>&gt; for T<div class=\"where\">where\n    T: Invert&lt;Output = <a class=\"struct\" href=\"https://docs.rs/subtle/2.5.0/subtle/struct.CtOption.html\" title=\"struct subtle::CtOption\">CtOption</a>&lt;T&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://docs.rs/subtle/2.5.0/subtle/trait.ConditionallySelectable.html\" title=\"trait subtle::ConditionallySelectable\">ConditionallySelectable</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a></h4></section></summary><div class='docblock'>The output of batch inversion. A container of field elements.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.batch_invert\" class=\"method trait-impl\"><a href=\"#method.batch_invert\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">batch_invert</a>(field_elements: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/subtle/2.5.0/subtle/struct.CtOption.html\" title=\"struct subtle::CtOption\">CtOption</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>&gt;</h4></section></summary><div class='docblock'>Invert a batch of field elements.</div></details></div></details>","BatchInvert<[T; N]>","xcm_emulator::XcmHash"]],
"xcm_fuzzer":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BatchInvert%3C%5BT;+N%5D%3E-for-T\" class=\"impl\"><a href=\"#impl-BatchInvert%3C%5BT;+N%5D%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, T&gt; BatchInvert&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>&gt; for T<div class=\"where\">where\n    T: Invert&lt;Output = <a class=\"struct\" href=\"https://docs.rs/subtle/2.5.0/subtle/struct.CtOption.html\" title=\"struct subtle::CtOption\">CtOption</a>&lt;T&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://docs.rs/subtle/2.5.0/subtle/trait.ConditionallySelectable.html\" title=\"trait subtle::ConditionallySelectable\">ConditionallySelectable</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a></h4></section></summary><div class='docblock'>The output of batch inversion. A container of field elements.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.batch_invert\" class=\"method trait-impl\"><a href=\"#method.batch_invert\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">batch_invert</a>(field_elements: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/subtle/2.5.0/subtle/struct.CtOption.html\" title=\"struct subtle::CtOption\">CtOption</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>&gt;</h4></section></summary><div class='docblock'>Invert a batch of field elements.</div></details></div></details>","BatchInvert<[T; N]>","xcm_fuzzer::parachain::mock_msg_queue::MessageId"]],
"xcm_simulator":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-%5BT;+N%5D\" class=\"impl\"><a href=\"#impl-Encode-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"xcm_simulator/trait.Encode.html\" title=\"trait xcm_simulator::Encode\">Encode</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"xcm_simulator/trait.Encode.html\" title=\"trait xcm_simulator::Encode\">Encode</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"xcm_simulator/trait.Encode.html#method.size_hint\" class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>If possible give a hint of expected size of the encoding. <a href=\"xcm_simulator/trait.Encode.html#method.size_hint\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to\" class=\"method trait-impl\"><a href=\"#method.encode_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"xcm_simulator/trait.Encode.html#method.encode_to\" class=\"fn\">encode_to</a>&lt;W&gt;(&amp;self, dest: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut W</a>)<div class=\"where\">where\n    W: Output + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Convert self to a slice and append it to the destination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"xcm_simulator/trait.Encode.html#method.encode\" class=\"fn\">encode</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Convert self to an owned vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.using_encoded\" class=\"method trait-impl\"><a href=\"#method.using_encoded\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"xcm_simulator/trait.Encode.html#method.using_encoded\" class=\"fn\">using_encoded</a>&lt;R, F&gt;(&amp;self, f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]) -&gt; R,</div></h4></section></summary><div class='docblock'>Convert self to a slice and then invoke the given closure with it.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_size\" class=\"method trait-impl\"><a href=\"#method.encoded_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"xcm_simulator/trait.Encode.html#method.encoded_size\" class=\"fn\">encoded_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculates the encoded size. <a href=\"xcm_simulator/trait.Encode.html#method.encoded_size\">Read more</a></div></details></div></details>","Encode","xcm_simulator::mock_message_queue::pallet::MessageId","xcm_simulator::XcmHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BatchInvert%3C%5BT;+N%5D%3E-for-T\" class=\"impl\"><a href=\"#impl-BatchInvert%3C%5BT;+N%5D%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, T&gt; BatchInvert&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>&gt; for T<div class=\"where\">where\n    T: Invert&lt;Output = <a class=\"struct\" href=\"https://docs.rs/subtle/2.5.0/subtle/struct.CtOption.html\" title=\"struct subtle::CtOption\">CtOption</a>&lt;T&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://docs.rs/subtle/2.5.0/subtle/trait.ConditionallySelectable.html\" title=\"trait subtle::ConditionallySelectable\">ConditionallySelectable</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a></h4></section></summary><div class='docblock'>The output of batch inversion. A container of field elements.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.batch_invert\" class=\"method trait-impl\"><a href=\"#method.batch_invert\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">batch_invert</a>(field_elements: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/subtle/2.5.0/subtle/struct.CtOption.html\" title=\"struct subtle::CtOption\">CtOption</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">[T; N]</a>&gt;</h4></section></summary><div class='docblock'>Invert a batch of field elements.</div></details></div></details>","BatchInvert<[T; N]>","xcm_simulator::mock_message_queue::pallet::MessageId","xcm_simulator::XcmHash"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()