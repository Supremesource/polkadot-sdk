(function() {var implementors = {
"pallet_example_offchain_worker":[["impl AppCrypto&lt;MultiSigner, MultiSignature&gt; for <a class=\"struct\" href=\"pallet_example_offchain_worker/crypto/struct.TestAuthId.html\" title=\"struct pallet_example_offchain_worker::crypto::TestAuthId\">TestAuthId</a>"],["impl AppCrypto&lt;&lt;<a class=\"struct\" href=\"sp_core/crypto_bytes/struct.CryptoBytes.html\" title=\"struct sp_core::crypto_bytes::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::sr25519::Signature::{constant#0}, (<a class=\"struct\" href=\"sp_core/crypto_bytes/signature_bytes/struct.SignatureTag.html\" title=\"struct sp_core::crypto_bytes::signature_bytes::SignatureTag\">SignatureTag</a>, Sr25519Tag)&gt; as Verify&gt;::Signer, <a class=\"struct\" href=\"sp_core/crypto_bytes/struct.CryptoBytes.html\" title=\"struct sp_core::crypto_bytes::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::sr25519::Signature::{constant#0}, (<a class=\"struct\" href=\"sp_core/crypto_bytes/signature_bytes/struct.SignatureTag.html\" title=\"struct sp_core::crypto_bytes::signature_bytes::SignatureTag\">SignatureTag</a>, Sr25519Tag)&gt;&gt; for <a class=\"struct\" href=\"pallet_example_offchain_worker/crypto/struct.TestAuthId.html\" title=\"struct pallet_example_offchain_worker::crypto::TestAuthId\">TestAuthId</a>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()