(function() {var implementors = {
"bridge_hub_rococo_runtime":[["impl&lt;AssetTransactor: <a class=\"trait\" href=\"staging_xcm_executor/traits/transact_asset/trait.TransactAsset.html\" title=\"trait staging_xcm_executor::traits::transact_asset::TransactAsset\">TransactAsset</a>, DestNetwork: Get&lt;<a class=\"enum\" href=\"staging_xcm/v4/junction/enum.NetworkId.html\" title=\"enum staging_xcm::v4::junction::NetworkId\">NetworkId</a>&gt;, DestParaId: Get&lt;<a class=\"struct\" href=\"polkadot_parachain_primitives/primitives/struct.Id.html\" title=\"struct polkadot_parachain_primitives::primitives::Id\">ParaId</a>&gt;, DestBridgedChain: <a class=\"trait\" href=\"bp_runtime/chain/trait.Chain.html\" title=\"trait bp_runtime::chain::Chain\">Chain</a>, BridgeLaneId: Get&lt;<a class=\"struct\" href=\"bp_messages/struct.LaneId.html\" title=\"struct bp_messages::LaneId\">LaneId</a>&gt;&gt; <a class=\"trait\" href=\"staging_xcm_builder/fee_handling/trait.HandleFee.html\" title=\"trait staging_xcm_builder::fee_handling::HandleFee\">HandleFee</a> for <a class=\"struct\" href=\"bridge_hub_rococo_runtime/xcm_config/struct.XcmExportFeeToRelayerRewardAccounts.html\" title=\"struct bridge_hub_rococo_runtime::xcm_config::XcmExportFeeToRelayerRewardAccounts\">XcmExportFeeToRelayerRewardAccounts</a>&lt;AssetTransactor, DestNetwork, DestParaId, DestBridgedChain, BridgeLaneId&gt;"]],
"snowbridge_runtime_common":[["impl&lt;Balance, AccountId, FeeAssetLocation, EthereumNetwork, AssetTransactor, FeeProvider&gt; HandleFee for <a class=\"struct\" href=\"snowbridge_runtime_common/struct.XcmExportFeeToSibling.html\" title=\"struct snowbridge_runtime_common::XcmExportFeeToSibling\">XcmExportFeeToSibling</a>&lt;Balance, AccountId, FeeAssetLocation, EthereumNetwork, AssetTransactor, FeeProvider&gt;<div class=\"where\">where\n    Balance: BaseArithmetic + <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/sign/trait.Unsigned.html\" title=\"trait num_traits::sign::Unsigned\">Unsigned</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    AccountId: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + FullCodec,\n    FeeAssetLocation: Get&lt;Location&gt;,\n    EthereumNetwork: Get&lt;NetworkId&gt;,\n    AssetTransactor: TransactAsset,\n    FeeProvider: SendMessageFeeProvider&lt;Balance = Balance&gt;,</div>"]],
"staging_xcm_builder":[]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()